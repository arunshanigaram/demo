name: DevSecOps Pipeline

on: [push, pull_request]

jobs:
  security-checks:
    name: 🔍 Run Security Scans
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🏗 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 📦 Install Dependencies
        run: |
          pip install -r requirements.txt
          pip install bandit safety pytest

      - name: 🔍 Run Bandit (SAST - Code Security)
        run: bandit -r app/ -ll -o bandit_report.txt -f txt

      - name: 🔍 Run Safety (SCA - Dependency Check)
        run: safety check --full-report > safety_report.txt

      - name: 📤 Upload Security Reports
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            bandit_report.txt
            safety_report.txt

  unit-tests:
    name: 🧪 Run Unit Tests
    runs-on: ubuntu-latest
    needs: security-checks

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🏗 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 📦 Install Dependencies
        run: pip install -r requirements.txt pytest

      - name: 🧪 Run Pytest
        run: pytest tests/ --junitxml=pytest_report.xml

      - name: 📤 Upload Test Reports
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: pytest_report.xml

  dast:
    name: 🌐 Run OWASP ZAP (DAST)
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
      - name: 🛠 Start Application (Docker)
        run: docker-compose up -d

      - name: 🌐 Run OWASP ZAP Scan
        run: |
          docker run --rm -v $(pwd):/zap/wrk/:rw -t owasp/zap2docker-stable zap-baseline.py -t http://localhost:8000 -g gen.conf -r zap_report.html

      - name: 📤 Upload ZAP Report
        uses: actions/upload-artifact@v3
        with:
          name: zap-report
          path: zap_report.html
